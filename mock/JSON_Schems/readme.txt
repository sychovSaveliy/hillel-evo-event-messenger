1. Регистрация:
1.1. FE отправляет запрос:
тип: POST
файл: registration.json
задача BE:
создать временную папку с именем post-data.username
отправить по адресу post-data.e-mail е-мйл для подтверждения регистрации (что и как - я без понятия, можем обсудить)
если в течении суток не пришло подтверждение - удалить временную папку
если подтверждение пришло, переносим данные в api/users с тем же именем из post-data.username
и заполняем: id = post-data.username, пароль и мыло из первоначального постзапроса + создаем token
все это генерит файл user_pattern (свободные поля эзер будет заполнять и присылать PUT запросы)

2. Авторизация
2.1. FE отправляет запрос:
тип: GET
файл: auth-get.json
задача BE:
найти в базе юзера пол логину (либо id, либо e-mail), вернуть "success": true, "token": "thisIsTokenForUserOne"

3. Event
3.1. Пользователь создает евент, он может его создавать не за раз, поэтому сохраняет draft:
тип: POST
файл: event.json
id генерится, в файл юзера добавляется этот id в массив events
в самом евете по умолчанию будет "status": false, если он отправляет евет народу, он меняется на true (т е когда перестает быть draft)
3.2. при голосовании за даты, места и т п отправляется запрос:
тип: PUT
где только один конкретный элемент переходит из массива date.drafts/place.drafts в confirmed

пользователи, которые подтвердили участие или поставили "возможно" получают в массиве members.invited.chat_success = true (до этого они все false)






